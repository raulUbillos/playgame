name: Production
env:
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
    AWS_S3_REGION: ${{secrets.AWS_S3_REGION}}
    AWS_DEFAULT_REGION: ${{secrets.AWS_S3_REGION}}
    SCRAPINGWEB: https://datos.gob.ar/dataset/generos-base-datos-linea-144
    INGEST_BUCKET: listas-144
    MODE: GET-LAST
    SHELL: 'bash'
on:
    push: 
        branches: 
            - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version: [16.x]  # Your project specifies Node >=16.0.0

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 6.7.1  # Specify the pnpm version you want to use

    - name: Install Dependencies with pnpm
      run: pnpm install

    - name: Run lint
      run: pnpm run lint

    - name: Build with Turbo
      run: pnpm run build

    - name: Package with Turbo
      run: pnpm run package

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      env:  # Ensure AWS credentials are available to Terraform
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_S3_REGION }}
      run: |
        cd terraform
        terraform init

    - name: Apply Terraform
      env:  # Ensure AWS credentials are available to Terraform
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_S3_REGION }}
      run: |
        cd terraform
        terraform apply -auto-approve

    - name: Deploy to Staging with Turbo
      if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
      run: pnpm run deploy:staging

    - name: Deploy to Production with Turbo
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: pnpm run deploy:production
